<?xml version="1.0" encoding="UTF-8"?>
	<project name="AnalMaster" default="do-deploy" basedir="."  xmlns:fx="javafx:com.sun.javafx.tools.ant">
	<target name="init-fx-tasks">
		<path id="fxant">
			<filelist>
				<file name="${java.home}\..\lib\ant-javafx.jar"/>
				<file name="${java.home}\lib\jfxrt.jar"/>
				<file name="${basedir}"/>
			</filelist>
		</path>
	
		<taskdef resource="com/sun/javafx/tools/ant/antlib.xml"
			uri="javafx:com.sun.javafx.tools.ant"
			classpathref="fxant"/>
		<taskdef name="bundleapp"
									             classname="com.oracle.appbundler.AppBundlerTask"   
									             classpath="deploy/appbundler-1.0.jar" />
	</target>
	<target name="setup-staging-area">
		<delete dir="externalLibs" />
		<delete dir="project" />
		<delete dir="projectRefs" />
	
		<mkdir dir="externalLibs" />
	
		<copy todir="externalLibs">
			<fileset dir="C:\Java\JavaFx\AnalMaster\lib">
				<filename name="sqlite-jdbc-3.36.0.1.jar"/>
			</fileset>
		</copy>
		<copy todir="externalLibs">
			<fileset dir="C:\Java\JavaFx\AnalMaster\lib">
				<filename name="httpclient-4.5.13.jar"/>
			</fileset>
		</copy>
		<copy todir="externalLibs">
			<fileset dir="C:\Java\JavaFx\AnalMaster\lib">
				<filename name="commons-logging-1.2.jar"/>
			</fileset>
		</copy>
		<copy todir="externalLibs">
			<fileset dir="C:\Java\JavaFx\AnalMaster\lib">
				<filename name="jsoup-1.10.2.jar"/>
			</fileset>
		</copy>
		<copy todir="externalLibs">
			<fileset dir="C:\Java\JavaFx\AnalMaster\lib">
				<filename name="httpcore-4.4.14.jar"/>
			</fileset>
		</copy>
		<copy todir="externalLibs">
			<fileset dir="C:\Java\JavaFx\AnalMaster\lib">
				<filename name="json.jar"/>
			</fileset>
		</copy>
		<copy todir="externalLibs">
				<fileset dir="C:\Java\JavaFx\AnalMaster\lib">
					<filename name="commons-io-2.11.0.jar"/>
				</fileset>
		</copy>

		
			<copy todir="externalLibs">
						<fileset dir="C:\Java\JavaFx\AnalMaster\lib">
							<filename name="log4j-api-2.18.0.jar"/>
						</fileset>
					</copy>
			
			<copy todir="externalLibs">
						<fileset dir="C:\Java\JavaFx\AnalMaster\lib">
							<filename name="poi-5.2.3.jar"/>
						</fileset>
					</copy>
		
		
		<mkdir dir="project" />
		<copy todir="project">
			<fileset dir="C:\Java\JavaFx\AnalMaster">
				<include name="src/**" />
			</fileset>
		</copy>
		<mkdir dir="project" />
				<copy todir="project">
									<fileset dir="..\.">
										<include name="src/**" />
									</fileset>
								</copy>
		<mkdir dir="projectRefs" />
	</target>
	<target name='do-compile'>
		<delete dir="build" />
		<mkdir dir="build/src" />
		<mkdir dir="build/lib" />
		<mkdir dir="build/classes" />
	
		<!-- Copy project-libs references -->
		<copy todir="build/lib">
			<fileset dir="externalLibs">
				<include name="json.jar"/>
				<include name="httpclient-4.5.13.jar"/>
				<include name="sqlite-jdbc-3.36.0.1.jar"/>
				<include name="httpcore-4.4.14.jar"/>
				<include name="jsoup-1.10.2.jar"/>
				<include name="commons-logging-1.2.jar"/>
				<include name="jsoup-1.10.2.jar"/>
					<include name="log4j-api-2.18.0.jar"/>
					<include name="commons-io-2.11.0.jar"/>
				<include name="poi-5.2.3.jar"/>
			</fileset>
		</copy>
	
		<!-- Copy project references -->
	
		<!-- Copy project sources itself -->
		<copy todir="build/src">
			<fileset dir="project/src">
				<include name="**/*"/>
			</fileset>
		</copy>
	
		<javac includeantruntime="false" source="1.8" target="1.8" srcdir="build/src" destdir="build/classes" encoding="Cp1251">
			<classpath>
				<fileset dir="build/lib">
					<include name="*"/>
				</fileset>
			</classpath>
		</javac>
	
		<!-- Copy over none Java-Files -->
		<copy todir="build/classes">
		<fileset dir="project/src">
			<exclude name="**/*.java"/>
		</fileset>
		</copy>
	
	
	</target>
	<target name="do-deploy" depends="setup-staging-area, do-compile, init-fx-tasks">
		<delete file="dist"/>
		<delete file="deploy" />
	
		<mkdir dir="dist" />
		<mkdir dir="dist/lib" />
		<mkdir dir="dist/resources" />
	
		<copy todir="dist/lib">
			<fileset dir="externalLibs">
				<include name="*" />
			</fileset>
		</copy>
	
		 <copy todir="dist/resources">  
										         <fileset dir="deploy/resources" includes="**"/>  
								        </copy> 
	
		<fx:resources id="appRes">
			<fx:fileset dir="dist" includes="AnalMaster.jar"/>
			<fx:fileset dir="dist" includes="lib/*"/>
			<fx:fileset dir="dist" includes="resources/**"/>
		</fx:resources>
	
		<fx:application id="fxApplication"
			name="AnalMaster"
			mainClass="am.Main"
			toolkit="fx"
			version="2.0"
		/>
	
		<mkdir dir="build/classes/META-INF" />
	
	
	
		<fx:jar destfile="dist/AnalMaster.jar">
			<fx:application refid="fxApplication"/>
			<fileset dir="build/classes">
			</fileset>
			<fx:resources refid="appRes"/>
	
			<manifest>
				<attribute name="Implementation-Vendor" value=""/>
				<attribute name="Implementation-Title" value="AnalMaster"/>
				<attribute name="Implementation-Version" value="0.1"/>
				<attribute name="JavaFX-Feature-Proxy" value="None"/>
			</manifest>
		</fx:jar>
	
	
		<mkdir dir="deploy" />
		<!-- Need to use ${basedir} because somehow the ant task is calculating the directory differently -->
		<fx:deploy
			embedJNLP="false"
			extension="false"
			includeDT="false"
			offlineAllowed="true"
			outdir="${basedir}/deploy"
			outfile="AnalMaster" nativeBundles="none"
			updatemode="background" >
	
			<fx:platform basedir="${java.home}"/>
			<fx:info title="AnalMaster" vendor=""/>
	
			<fx:application refId="fxApplication"/>
			<fx:resources refid="appRes"/>
		</fx:deploy>
	
	
	</target>
		
		
		<target name="createApp" depends="do-deploy">
							        <bundleapp outputdirectory="."
							            name="AnalMaster"
							            displayname="AnalMaster"
										icon="deploy/icon.icns"
							            identifier="am.Main"
							            mainclassname="am.Main">
							            <!-- The following is important and should point to your build -->
							            <classpath file="deploy/AnalMaster.jar" />
										<!-- <classpath dir="deploy/lib" includes="*.jar" /> -->
										
										<option value="-Duser.dir=$APP_ROOT/Contents/Resources"/>
							            <!-- You can have multiple instance of classpath if you 3rd party or
							                 dependent jars in different locations -->
							        </bundleapp>
									<copy todir="AnalMaster.app/Contents/Java/lib" >  
					                          	<fileset dir="deploy/lib">
					                          					<include name="*" />
					                          				</fileset>
					                    </copy> 
									<copy todir="AnalMaster.app/Contents/Resources/resources" >  
					                          <fileset dir="deploy/resources" includes="**"/>  
					                    </copy> 
							    </target>
		
</project>
